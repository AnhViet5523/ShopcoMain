import { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { Box, Grid, Typography, Button } from '@mui/material';
import Header from '../../../components/Header';
import Footer from '../../../components/Footer/Footer';
import './DaNhayCam.css';
import orderService from '../../../apis/orderService';

const DaNhayCam = () => {
    const [products, setProducts] = useState([]);
    const [showRoutine, setShowRoutine] = useState(true);
    const navigate = useNavigate();

    const handleFindProducts = () => {
        const productItems = [
            { id: 1, title: "S·ªØa r·ª≠a m·∫∑t:", name: "N∆∞·ªõc T·∫©y Trang L'Oreal T∆∞∆°i M√°t Cho Da D·∫ßu, H·ªón H·ª£p 400ml" },
            { id: 17, title: "Toner:", name: "N∆∞·ªõc Hoa H·ªìng Simple L√†m D·ªãu Da & C·∫•p ·∫®m 200ml Kind to Skin Soothing Facial Toner" },
            { id: 11, title: "ƒê·∫∑c tr·ªã:", name: "Dung D·ªãch T·∫©y Da Ch·∫øt Paula's Choice 2% BHA 30ml Skin Perfecting 2% BHA Liquid" },
            { id: 57, title: "Kem m·∫Øt:", name: "Kem D∆∞·ª°ng M·∫Øt Ng·ª´a L√£o H√≥a, Gi·∫£m Qu·∫ßng Th√¢m 30g" },
            { id: 79, title: "Kem d∆∞·ª°ng ·∫©m:", name: "Kem D∆∞·ª°ng ·∫®m Neutrogena C·∫•p N∆∞·ªõc Cho Da D·∫ßu 50g" },
            { id: 76, title: "Kem ch·ªëng n·∫Øng:", name: "Kem Ch·ªëng N·∫Øng La Roche-Posay Ki·ªÉm So√°t D·∫ßu SPF50+ 50ml" },
            { id: 75, title: "T·∫©y trang:", name: "N∆∞·ªõc T·∫©y Trang Bioderma D√†nh Cho Da D·∫ßu & H·ªón H·ª£p 500ml" },
            { id: 15, title: "T·∫©y t·∫ø b√†o ch·∫øt:", name: "T·∫©y T·∫ø B√†o Ch·∫øt Rosette Cho M·ªçi Lo·∫°i Da 120g Gommage Gentle Peeling Gel" },
            { id: 91, title: "Serum:", name: "Serum Skin1004 Rau M√° L√†m D·ªãu & H·ªó Tr·ª£ Ph·ª•c H·ªìi Da 100ml" },
        ];

        setProducts(productItems);
        setShowRoutine(false); // ·∫®n quy tr√¨nh ngay l·∫≠p t·ª©c
        sessionStorage.setItem('showProducts', 'true'); // L∆∞u tr·∫°ng th√°i hi·ªÉn th·ªã s·∫£n ph·∫©m
    };

    const handleShowRoutine = () => {
        setShowRoutine(true); // Hi·ªÉn th·ªã l·∫°i quy tr√¨nh
        setProducts([]); // X√≥a danh s√°ch s·∫£n ph·∫©m
        sessionStorage.removeItem('showProducts'); // X√≥a tr·∫°ng th√°i
    };

    const handleProductClick = (productId) => {
        navigate(`/product/${productId}`); // Chuy·ªÉn h∆∞·ªõng ƒë·∫øn trang chi ti·∫øt s·∫£n ph·∫©m
    };

    // Th√™m h√†m x·ª≠ l√Ω mua combo
    const handleBuyCombo = async () => {
        try {
            // L·∫•y th√¥ng tin ng∆∞·ªùi d√πng t·ª´ localStorage
            const user = JSON.parse(localStorage.getItem('user'));
            
            if (!user || !user.userId) {
                // N·∫øu ch∆∞a ƒëƒÉng nh·∫≠p, chuy·ªÉn ƒë·∫øn trang ƒëƒÉng nh·∫≠p
                alert('Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ mua s·∫£n ph·∫©m');
                navigate('/login');
                return;
            }
            
            // Th√™m c√°c s·∫£n ph·∫©m v√†o gi·ªè h√†ng
            const productIds = products.map(product => product.id);
            
            // Gi·ªØ track c√°c s·∫£n ph·∫©m ƒë√£ th√™m th√†nh c√¥ng
            const successItems = [];
            
            // G·ªçi API ƒë·ªÉ th√™m t·ª´ng s·∫£n ph·∫©m v√†o gi·ªè h√†ng
            for (const productId of productIds) {
                try {
                    console.log(`ƒêang th√™m s·∫£n ph·∫©m ID: ${productId} v√†o gi·ªè h√†ng`);
                    const result = await orderService.addtocard(user.userId, productId, 1);
                    console.log(`K·∫øt qu·∫£ th√™m s·∫£n ph·∫©m ID ${productId}:`, result);
                    
                    if (result) {
                        successItems.push(productId);
                    }
                } catch (itemError) {
                    console.error(`L·ªói khi th√™m s·∫£n ph·∫©m ID ${productId}:`, itemError);
                }
            }
            
            // Hi·ªÉn th·ªã th√¥ng b√°o k·∫øt qu·∫£ sau khi ho√†n th√†nh
            alert(`ƒê√£ th√™m ${successItems.length}/${productIds.length} s·∫£n ph·∫©m v√†o gi·ªè h√†ng`);
            
            // K√≠ch ho·∫°t s·ª± ki·ªán ƒë·ªÉ b√°o cho c√°c component kh√°c bi·∫øt gi·ªè h√†ng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t
            window.dispatchEvent(new CustomEvent('cartUpdated'));
            
            // Chuy·ªÉn ƒë·∫øn trang gi·ªè h√†ng
            navigate('/cart');
            
        } catch (error) {
            console.error('L·ªói khi th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng:', error);
            alert('C√≥ l·ªói x·∫£y ra khi th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng. Vui l√≤ng th·ª≠ l·∫°i sau.');
        }
    };

    useEffect(() => {
        const showProducts = sessionStorage.getItem('showProducts');
        if (showProducts === 'true') {
            handleFindProducts(); // G·ªçi h√†m ƒë·ªÉ c·∫≠p nh·∫≠t danh s√°ch s·∫£n ph·∫©m
        }

        // X√≥a tr·∫°ng th√°i khi component unmount
        return () => {
            sessionStorage.removeItem('showProducts');
        };
    }, []);

    return (
        <>
            <Header />
            <Box sx={{ flexGrow: 1, py: 4, bgcolor: '#f5f5f5', width: "99vw", overflowX: "hidden" }}>
                <Grid container spacing={2}>
                    {/* Grid cho h√¨nh ·∫£nh */}
                    <Grid item xs={12} md={6} sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', p: 2 }}>
                        <Box className="image-container">
                            <img 
                                src="/images/danhaycam.jpg" 
                                alt="Da Nh·∫°y C·∫£m" 
                                className="skin-image"
                            />
                        </Box>
                    </Grid>
                    
                    {/* Grid cho n·ªôi dung */}
                    <Grid item xs={12} md={6}>
                        <Box sx={{ pl: { md: 4 }, pr: { md: 2 }, py: 2 }} className="content-container">
                            <Typography variant="h4" gutterBottom sx={{ color: '#ffbb02', fontWeight: 'bold', textAlign: 'center' }} className="highlight-yellow">
                                üåø Da nh·∫°y c·∫£m ‚Äì D·ªãu nh·∫π, gi·∫£m k√≠ch ·ª©ng üåø
                            </Typography>

                            {showRoutine ? (
                                <Box className="routine-container">
                                    <Typography variant="body1" paragraph sx={{ color: '#ffbb02', fontWeight: 'bold' }} className="list-black">
                                        üîπ ƒê·∫∑c ƒëi·ªÉm:
                                        <ul className="list-black">
                                            <li>D·ªÖ b·ªã ƒë·ªè, k√≠ch ·ª©ng khi thay ƒë·ªïi th·ªùi ti·∫øt ho·∫∑c d√πng m·ªπ ph·∫©m l·∫°.</li>
                                            <li>Da m·ªèng, d·ªÖ m·∫•t n∆∞·ªõc, h√†ng r√†o b·∫£o v·ªá da y·∫øu.</li>
                                            <li>C·∫ßn tr√°nh s·∫£n ph·∫©m c√≥ h∆∞∆°ng li·ªáu, c·ªìn, BHA m·∫°nh.</li>
                                        </ul>
                                    </Typography>
                                    <Typography variant="body1" paragraph sx={{ color: '#ffbb02', fontWeight: 'bold' }} className="highlight-yellow">
                                        ‚ú® Bu·ªïi s√°ng: B·∫£o v·ªá v√† ngƒÉn k√≠ch ·ª©ng
                                        <ol className="list-black">
                                            <li>S·ªØa r·ª≠a m·∫∑t ‚Äì D·ªãu nh·∫π, kh√¥ng ch·ª©a h∆∞∆°ng li·ªáu v√† c·ªìn.</li>
                                            <li>Toner ‚Äì L√†m d·ªãu, gi·∫£m ƒë·ªè v·ªõi chi·∫øt xu·∫•t hoa c√∫c ho·∫∑c l√¥ h·ªôi.</li>
                                            <li>ƒê·∫∑c tr·ªã ‚Äì Tinh ch·∫•t rau m√°, B5 ph·ª•c h·ªìi da t·ªïn th∆∞∆°ng.</li>
                                            <li>Serum ‚Äì D∆∞·ª°ng ·∫©m s√¢u nh∆∞ng kh√¥ng g√¢y b√≠ da.</li>
                                            <li>Kem m·∫Øt ‚Äì Nh·∫π nh√†ng, gi·∫£m s∆∞ng v√† qu·∫ßng th√¢m.</li>
                                            <li>Kem d∆∞·ª°ng ·∫©m ‚Äì C·∫•p ·∫©m, kh√≥a n∆∞·ªõc, gi√∫p da cƒÉng kh·ªèe.</li>
                                            <li>Kem ch·ªëng n·∫Øng ‚Äì D·∫°ng v·∫≠t l√Ω, kh√¥ng g√¢y k√≠ch ·ª©ng.</li>
                                        </ol>
                                    </Typography>
                                    <Typography variant="body1" paragraph sx={{ color: '#ffbb02', fontWeight: 'bold' }} className="highlight-yellow">
                                        üåô Bu·ªïi t·ªëi: Ph·ª•c h·ªìi, c·ªßng c·ªë h√†ng r√†o b·∫£o v·ªá da
                                        <ol className="list-black">
                                            <li>T·∫©y trang ‚Äì D·∫°ng n∆∞·ªõc ho·∫∑c s·ªØa, kh√¥ng g√¢y k√≠ch ·ª©ng.</li>
                                            <li>S·ªØa r·ª≠a m·∫∑t ‚Äì D·ªãu nh·∫π, kh√¥ng l√†m m·∫•t ƒë·ªô ·∫©m t·ª± nhi√™n.</li>
                                            <li>Toner ‚Äì L√†m d·ªãu, gi√∫p da h·∫•p th·ª• d∆∞·ª°ng ch·∫•t t·ªët h∆°n.</li>
                                            <li>T·∫©y t·∫ø b√†o ch·∫øt (BHA, AHA) ‚Äì 1-2 l·∫ßn/tu·∫ßn ƒë·ªÉ tr√°nh b√†o m√≤n da.</li>
                                            <li>ƒê·∫∑c tr·ªã ‚Äì Tinh ch·∫•t ceramide, peptide gi√∫p ph·ª•c h·ªìi da.</li>
                                            <li>Serum ‚Äì D∆∞·ª°ng s√¢u, tƒÉng s·ª©c ƒë·ªÅ kh√°ng cho da.</li>
                                            <li>Kem m·∫Øt ‚Äì D∆∞·ª°ng ·∫©m nh·∫π nh√†ng, gi√∫p da th∆∞ gi√£n.</li>
                                            <li>Kem d∆∞·ª°ng ·∫©m ‚Äì Th√†nh ph·∫ßn ƒë∆°n gi·∫£n, l√†nh t√≠nh, kh√≥a ·∫©m su·ªët ƒë√™m.</li>
                                        </ol>
                                    </Typography>
                                </Box>
                            ) : (
                                <Box className="products-container">
                                    <Typography variant="body1" paragraph sx={{ color: '#ffbb02', fontWeight: 'bold' }} className="list-black">
                                        {products.map((product) => (
                                            <div key={product.id} className="product-item" onClick={() => handleProductClick(product.id)}>
                                                <span className="product-title">{product.title}</span> <span className="product-name">{product.name}</span>
                                            </div>
                                        ))}
                                    </Typography>
                                </Box>
                            )}
                        
                            <Box sx={{ display: 'flex', gap: 2, mt: 2, justifyContent: 'center' }}>
                                <Button 
                                    variant="contained" 
                                    sx={{ bgcolor: '#ffbb02', color: 'white' }}
                                    onClick={showRoutine ? handleFindProducts : handleShowRoutine}
                                >
                                    {showRoutine ? "T√¨m S·∫£n Ph·∫©m Ph√π H·ª£p" : "Xem Quy Tr√¨nh"}
                                </Button>

                                {!showRoutine && (
                                    <Button 
                                        variant="contained" 
                                        sx={{ bgcolor: '#ff7b02', color: 'white' }}
                                        onClick={handleBuyCombo}
                                    >
                                        Mua c·∫£ combo
                                    </Button>
                                )}
                            </Box>
                        </Box>
                    </Grid>
                </Grid>
            </Box>
            <Footer />
        </>
    );
};

export default DaNhayCam;
